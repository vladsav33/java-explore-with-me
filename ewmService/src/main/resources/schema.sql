DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS events_x_compilations CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users (
      id bigint generated by default as identity primary key,
      name varchar(250),
      email varchar(254)
);

CREATE TABLE IF NOT EXISTS categories (
      id bigint generated by default as identity primary key,
      name varchar(50)
);

CREATE TABLE IF NOT EXISTS events (
      id bigint generated by default as identity primary key,
      annotation varchar(2000),
      category_id bigint REFERENCES categories (id),
      confirmed_requests int,
      created_on timestamp,
      description varchar(7000),
      event_date timestamp,
      initiator_id bigint REFERENCES users (id),
      locations float[],
      paid boolean,
      participant_limit integer,
      published_on timestamp,
      request_moderation boolean,
      state varchar(100),
      title varchar(120),
      views integer
);

CREATE TABLE IF NOT EXISTS requests (
      id bigint generated by default as identity primary key,
      event_id bigint REFERENCES events (id),
      requester_id bigint REFERENCES users (id),
      status varchar(20),
      created timestamp
);

CREATE TABLE IF NOT EXISTS compilations (
      id bigint generated by default as identity primary key,
      pinned boolean,
      title varchar(50)
);

CREATE TABLE IF NOT EXISTS events_x_compilations (
      event_id bigint REFERENCES events (id),
      compilation_id bigint REFERENCES compilations (id)
);

CREATE TABLE comments (
      id bigint generated by default as identity primary key,
      event_id bigint REFERENCES events (id),
      user_id bigint REFERENCES users (id),
      comment_text varchar(5000),
      updated timestamp
);